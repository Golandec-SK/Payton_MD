"""
Словарь — неупорядоченная структура данных, которая позволяет хранить
пары «ключ — значение». Вот пример словаря на Python:
"""
dictionary = {'персона': 'человек',
              'марафон': 'гонка бегунов длиной около 26 миль',
              'противостоять': 'оставаться сильным, несмотря на давление',
              'бежать': 'двигаться со скоростью'}
"""
Добавление новых пар в словарь происходит достаточно просто:
"""
# Добавляем ключ "туфля" со значением "род обуви, закрывающей ногу не выше щиколотки"
dictionary['туфля'] = 'род обуви, закрывающей ногу не выше щиколотки'
"""
Обновление существующих значений происходит абсолютно также:
"""
# Обновляем ключ "туфля" и присваиваем ему значение "хорошая туфля"
dictionary['туфля'] = 'хорошая туфля'
"""
Для удаления ключа и соответствующего значения из словаря можно использовать del
"""
# Удаляем значение с ключом "противостоять" из словаря
del dictionary['противостоять']
"""
Словари в Python имеют множество различных полезных методов,
которые помогут вам в работе с ними. Вот лишь некоторые из них:
Метод update() пригодится, если нужно обновить несколько пар сразу.
Метод принимает другой словарь в качестве аргумента.
"""
# Добавляем две пары в словарь dictionary, используя метод update
dictionary.update({'бежал': 'бежать в прошедшем времени',
                   'туфли': 'туфля во множественном числе'})
print(dictionary)
"""
Метод get() возвращает значение по указанному ключу.
Если указанного ключа не существует, метод вернёт None.
"""
# Допустим, у нас есть словарь story_count
story_count = {'сто': 100,
               'девяносто': 90,
               'двенадцать': 12,
               'пять': 5}
# Ключ "двенадцать" существует и метод get в данном случае вернёт 12
story_count.get('двенадцать')
"""
Метод pop() удаляет ключ и возвращает соответствующее ему значение.
"""
story_count.pop('девяносто')
print(story_count)
"""
Метод keys() возвращает коллекцию ключей в словаре.
"""
story_count.keys()
print(story_count)
"""
Метод values() возвращает коллекцию значений в словаре.
"""
story_count.values()
print(story_count)
"""
Метод items() возвращает пары «ключ — значение».
"""
dictionary.items()
print(dictionary)
# Итерация через словарь
for key in story_count:
   print(key)