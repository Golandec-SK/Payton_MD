# Конкатенация строк с использованием оператора +
# Это самый простой способ конкатенации строк. Давайте посмотрим на простой пример.
s1 = 'Apple'
s2 = 'Pie' 
s3 = 'Sauce' 
s4 = s1 + s2 + s3 
print(s1 + s2 + s3)

# Конкатенация строк с использованием функции join()
# Мы можем использовать функцию join() для объединения строки с разделителем.
# Это полезно, когда у нас есть последовательность строк, например список или кортеж строк.
# Если вам не нужен разделитель, используйте функцию join() с пустой строкой.
s1 = 'Hello'
s2 = 'World'

print('Concatenated String using join() =', "".join([s1, s2])) 
print('Concatenated String using join() and whitespaces =', " ".join([s1, s2]))

# Конкатенация с использованием оператора%
# Мы можем использовать оператор% для форматирования строк, он также может
# использоваться для конкатенации строк. Это полезно, когда мы хотим
# объединить строки и выполнить простое форматирование.
s1 = 'Hello'
s2 = 'World'

s3 = "%s %s" % (s1, s2) 
print('String Concatenation using % Operator =', s3) 

s3 = "%s %s from JournalDev - %d" % (s1, s2, 2018)
print('String Concatenation using % Operator with Formatting =', s3)

# С использованием функции format()
# Мы также можем использовать функцию string format() для объединения и форматирования строк.
s1 = 'Hello' 
s2 = 'World' 

s3 = "{}-{}".format(s1, s2) 
print('String Concatenation using format() =', s3) 

s3 = "{in1} {in2}".format(in1=s1, in2=s2) 
print('String Concatenation using format() =', s3)

# С использованием f-строки
# Если вы используете Python 3.6+, вы также можете использовать f-строку
# для конкатенации строк. Это новый способ форматирования строк,
# представленный в PEP 498 – Literal String Interpolation.
s1 = 'Hello'
s2 = 'World'
s3 = f'{s1} {s2}' 
print('String Concatenation using f-string =', s3) 

name = 'Pankaj' 
age = 34 
d = 10
print(f'{name} age is {age} and d={d}')
# F-строка в Python проще в написании по сравнению с функцией format().
# Он также вызывает функцию str(), когда аргумент объекта используется в качестве замены поля.

# Забавные строки
# Демонстрирует сцепление и повторение строк
print("Две строки можно " + "Сцепить с помощью оператора '+'.")
print("\nЭта строка " + "вряд ли " + "удив" + "ит вас. " \
    + "Но интересно, " + "что" + " она - \n" + "одна длинная - длина" \
    + "на" + "я" + " строка, сцепленная " \
    + "из " + "двадцать двух\n" + "отдельных строк, разбитых " \
    + "на шесть строк. " + "Достаточно ли вы" + "впечатлены? " + "Ну хватит,\n" \
    + "вот" + "наша " + "длинная " + " строка и закончилась!")
print("\nЕсли текст нравиться, его можно и повторить. К примеру,")
print("кто не любит пирожки? Только дураки не любят пирожки. А")
print("раз мы люди честные, то выскажемся о своих симпатиях")
print("откровенно:")
print("_Пирожки_" * 10)

input("\n\nНажмите Enter, чтобы выйти.\n")