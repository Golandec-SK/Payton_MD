"""
sep — позволяет задать разделитель, который будет выводиться между
элементами, переданными в функцию print(). По умолчанию разделителем
является пробел, но с помощью sep пробел можно заменить на другой
разделитель, к примеру, на запятую.
"""
print('туториал', 'по', 'функции', 'print()')
print('туториал', 'по', 'функции', 'print()', sep='\n')

"""
end позволяет определять символ, который будет добавлен в конец
сообщения после вывода. По умолчанию это символ перевода строки.
Поменять его можно, к примеру, на точку с запятой. 
"""
print('Брюки - это')
print('одежда, которая надевается на нижнюю часть тела.')

print('Брюки - это', end=' ')
print('одежда, которая надевается на нижнюю часть тела.')

"""
file позволяет перенаправить вывод текста в нужный вам файл.
По умолчанию функция выводит текст в консоль, в которой вы и задаёте
команды Python. Аргумент file полезен, если нужно сохранить вывод
для дальнейшего использования.
"""
file = open('print.txt','a+') #открываем файл

def value(items):
    for item in items:
        print(item, file=file) #вызываем функцию print, вывод которой должен записаться в файл
    file.close()  # закрываем файл

value([1,2,3,4,5,6,7,8,9,10])

"""
flush позволяет управлять буферизацией вывода. Если этот аргумент
установлен в True, то вывод не будет буферизоваться и будет
выводиться немедленно.
"""
with open('output.txt', 'w') as f:
    print('Hello, world!', file=f, flush=True)